name: 'Combine PRs'

on:
  workflow_dispatch:
    inputs:
      label-name:
        description: 'Include PRs with this label'
        required: true
        default: 'combine'
      must-be-green:
        description: 'Only combine PRs that are green (status is success)'
        required: true
        default: 'true'
      combine-branch-name:
        description: 'Name of the branch to combine PRs into'
        required: true
        default: 'combine-prs-branch'

jobs:
  combine-prs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        id: fetch-branch-names
        name: Fetch branch names
        env:
          MUST_BE_GREEN: ${{ github.event.inputs['must-be-green'] }}
          LABEL_NAME: ${{ github.event.inputs['label-name'] }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let pulls = await github.paginate('GET /repos/:owner/:repo/pulls', {
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            pulls.reverse()

            branches = []
            pullsForCombine = []
            baseBranch = null

            for (const pull of pulls) {
              const labels = pull.labels
              console.log('Pull: ' + pull.title)

              for (const label of labels) {
                if (label.name === process.env.LABEL_NAME) {
                  statusOk = true
                  console.log('Label matched: ' + label.name)

                  if (process.env.MUST_BE_GREEN === 'true') {
                    const statuses = await github.paginate(
                      'GET /repos/{owner}/{repo}/commits/{ref}/status',
                      {
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        ref: pull.base.ref,
                      }
                    )
                    console.log('Checking green status: ' + pull.title)

                    if (statuses.length > 0) {
                      const latestStatus = statuses[0].state
                      console.log('Validating status: ' + latestStatus)

                      if (latestStatus !== 'success') {
                        console.log(
                          'Discarding ' + pull.title + ' with status ' + latestStatus
                        )
                        statusOk = false
                      }
                    }
                  }

                  if (statusOk) {
                    console.log('Adding pull to array: ' + pull.title)

                    branches.push(pull.head.ref)
                    pullsForCombine.push(
                      `${pull.number}: [${pull.title}](${pull.number})`
                    )
                    baseBranch = pull.base.ref
                  }
                }
              }
            }

            if (branches.length == 0) {
              core.setFailed('No PRs matched criteria')
              return
            }

            core.setOutput('base-branch', baseBranch)
            core.setOutput('pulls', pullsForCombine.join('\n'))

            branches = branches.join(' ')

            console.log('Combined: ' + branches)

            return branches

      - uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
      - name: Create combined branch
        env:
          BASE_BRANCH: ${{ steps.fetch-branch-names.outputs.baseBranch }}
          BRANCHES_TO_COMBINE: ${{ steps.fetch-branch-names.outputs.result }}
          COMBINE_BRANCH_NAME: ${{ github.event.inputs.combine-branch-name }}
        run: |
          echo "$BRANCHES_TO_COMBINE"
          sourceBranches="${BRANCHES_TO_COMBINE%\"}"
          sourceBranches="${sourceBranches#\"}"

          baseBranch="${BASE_BRANCH%\"}"
          baseBranch="${baseBranch#\"}"

          git config pull.rebase false
          git config user.name github-actions
          git config user.email github-actions@github.com

          git branch $COMBINE_BRANCH_NAME $baseBranch
          git checkout $COMBINE_BRANCH_NAME
          git pull origin $sourceBranches --no-edit
          git push origin $COMBINE_BRANCH_NAME

      - uses: actions/github-script@v3
        name: Create Combined Pull Request
        env:
          PULLS: ${{ steps.fetch-branch-names.outputs.pulls }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pulls = process.env.PULLS
            const body = 'This PR was created by combining the following PRs:\n' + pulls
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Combined PR',
              head: '${{ github.event.inputs.combine-branch-name }}',
              base: '${{ steps.fetch-branch-names.outputs.base-branch }}',
              body: body,
            })
